{"version":3,"sources":["assets/images/original.png","hoc/Aux.js","components/Logo/Logo.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","src","burgerLogo","alt","toolbar","layout","Aux","BurgerIngredient","ingredient","this","type","Component","burger","ingredients","transformedIngredients","Object","keys","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","onClick","removed","disabled","check","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchased","purchasable","backdrop","show","clicked","modal","modalClosed","style","transform","opacity","button","btnType","orderSummary","ingredientSummary","textTransform","continued","canceled","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCounted","updatedIngredients","priceAddition","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","sum","values","disabledInfo","OrderSummary","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.63a2cc5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/original.b8503d26.png\";","const aux = (props) => props.children\r\n\r\nexport default aux","import React from 'react';\r\n\r\nimport './Logo.css'\r\nimport burgerLogo from '../../assets/images/original.png'\r\n\r\nconst logo = (props) => (\r\n    <div className='Logo'>\r\n        <img src={burgerLogo} alt=\"burger\"/>\r\n    </div>        \r\n);\r\n\r\nexport default logo","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo'\r\nimport './Toolbar.css'\r\n\r\nconst toolbar = (props) => (\r\n    <div className='Toolbar'>\r\n        <div>Main</div>\r\n        <Logo/>\r\n        <nav>\r\n            ...\r\n        </nav>\r\n    </div>        \r\n);\r\n\r\nexport default toolbar","import React from 'react'\r\nimport './Layout.css'\r\nimport Aux from '../../hoc/Aux'\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\r\n\r\nconst layout = (props) => (\r\n    <Aux>\r\n        <Toolbar/>\r\n        <main className='Content'>\r\n            {props.children}\r\n        </main>\r\n    </Aux>\r\n);\r\n\r\nexport default layout;","import React, {Component} from 'react'\r\nimport './BurgerIngredient.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass BurgerIngredient extends Component {\r\n    \r\n    render(){\r\n\r\n    let ingredient = null;\r\n    \r\n    switch (this.props.type){\r\n        case('bread-bottom'):\r\n            ingredient = <div className='BreadBottom'></div>;\r\n            break;\r\n        case ('bread-top'):\r\n            ingredient = (\r\n                <div className={'BreadTop'}>\r\n                    <div className={'Seeds1'}></div>\r\n                    <div className={'Seeds2'}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case('meat'):\r\n            ingredient = <div className='Meat'></div>;\r\n            break;\r\n        case('cheese'):\r\n            ingredient = <div className='Cheese'></div>;\r\n            break;\r\n        case('bacon'):\r\n            ingredient = <div className='Bacon'></div>;\r\n            break;\r\n        case('salad'):\r\n            ingredient = <div className='Salad'></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    };\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\nimport './Burger.css'\r\n\r\nconst burger = ({ingredients}) => {\r\n\r\n    let transformedIngredients = Object.keys(ingredients)\r\n        .map(igKey => {\r\n            return [...Array(ingredients[igKey])].map((_,i) => {\r\n                \r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            })\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport './BuildControl.css'; \r\n\r\nconst buildControl = (props) => (\r\n    \r\n    <div className='BuildControl'>\r\n        <div className='Label'>{props.label}</div>\r\n        \r\n            <button className='Less' onClick={props.removed} disabled={props.check}>Less</button>\r\n            <button className='More' onClick={props.added}>More</button>\r\n        </div>\r\n    \r\n)\r\n\r\nexport default buildControl","import React from 'react';\r\nimport './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad'},\r\n    { label: 'Bacon', type: 'bacon'},\r\n    { label: 'Cheese', type: 'cheese'},\r\n    { label: 'Meat', type: 'meat'},\r\n];\r\n\r\n\r\n\r\nconst buildControls = (props) => (\r\n    <div className='BuildControls'>\r\n        <p>Current Price: <string>{props.price.toFixed(2)}</string></p>\r\n        {controls.map(ctrl => (\r\n            \r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                check={props.disabled[ctrl.type]}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)} />\r\n        ))}\r\n        <button className='OrderButton' onClick={props.purchased} disabled={!props.purchasable}>ORDER NOW</button>\r\n    </div>\r\n)\r\n\r\nexport default buildControls","import React from 'react';\r\n\r\nimport './Backdrop.css'\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className='Backdrop' onClick={props.clicked}></div> : null        \r\n);\r\n\r\nexport default backdrop","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Aux'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nimport './Modal.css'\r\n\r\nconst modal = (props) => (\r\n    <Aux>\r\n        <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n            <div className='Modal' \r\n                style ={{\r\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: props.show ? '1' : '0'\r\n                }}>\r\n                {props.children}\r\n            </div>\r\n    </Aux>        \r\n);\r\n\r\nexport default modal","import React from 'react';\r\n\r\nimport './Button.css'\r\n\r\nconst button = (props) => (\r\n    <button\r\n        onClick={props.clicked}\r\n        className={\"Button \" + props.btnType}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Aux'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n            </li> );\r\n        });\r\n\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p>Continue to checkout?</p>\r\n            <p><strong>Total price: {props.price.toFixed(2)}</strong></p>\r\n            <Button clicked={props.continued} btnType=\"Success\">CONTINUE</Button>\r\n            <Button clicked={props.canceled} btnType=\"Danger\">CANCEL</Button>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default orderSummary","import React, {Component} from 'react';\r\nimport Burger from '../../components/Burger/Burger'\r\nimport Aux from '../../hoc/Aux'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 1,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nclass BurgerBuilder extends Component{\r\n\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 2,\r\n        purchasable: false,\r\n        purchased: false  \r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        \r\n        const sum = Object.values( ingredients ).reduce( (sum, el) =>{\r\n            return sum+el;\r\n        }, 0 );\r\n \r\n        this.setState({purchasable : sum > 0})\r\n        \r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCounted = oldCount +1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCounted;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n       \r\n        const updatedCounted = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        if(updatedCounted >= 0){\r\n            updatedIngredients[type] = updatedCounted;\r\n        }\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchased: true})\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchased: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        alert('Cintinue')\r\n    }\r\n\r\n    \r\n    render() {\r\n        let disabledInfo = {...this.state.ingredients}\r\n        for (let key in disabledInfo ){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchased} modalClosed={this.purchaseCancelHandler }>\r\n                    <OrderSummary \r\n                        price={this.state.totalPrice}\r\n                        ingredients={this.state.ingredients} \r\n                        canceled={this.purchaseCancelHandler}\r\n                        continued={this.purchaseContinueHandler}\r\n                    />\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                \r\n                <BuildControls\r\n                    disabled={disabledInfo} \r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    price={this.state.totalPrice}\r\n                    purchased={this.purchaseHandler}\r\n                    purchasable={this.state.purchasable}/>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\n\nfunction App() {\n  return (\n     \n    <div >\n      <Layout>\n        <BurgerBuilder/>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}